<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>初一年级班级合照</title>
    <link href="/2022/12/16/%E5%88%9D%E4%B8%80%E5%B9%B4%E7%BA%A7%E7%8F%AD%E7%BA%A7%E5%90%88%E7%85%A7/"/>
    <url>/2022/12/16/%E5%88%9D%E4%B8%80%E5%B9%B4%E7%BA%A7%E7%8F%AD%E7%BA%A7%E5%90%88%E7%85%A7/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/uploads/%E5%90%88%E7%85%A7.jpg" alt="班级合照"></p>]]></content>
    
    
    <categories>
      
      <category>学校</category>
      
    </categories>
    
    
    <tags>
      
      <tag>四中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/12/16/hello-world/"/>
    <url>/2022/12/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello Netlify CMS!</title>
    <link href="/2022/12/16/hello-netlify-cms/"/>
    <url>/2022/12/16/hello-netlify-cms/</url>
    
    <content type="html"><![CDATA[<p><em><strong>H﻿exo  ❤️ Netlify CMS</strong></em></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>SAE json分析</title>
    <link href="/2022/10/06/SAE-json%E5%88%86%E6%9E%90/"/>
    <url>/2022/10/06/SAE-json%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<p>如果你想查看 <code>tnode</code> 和 <code>tdata</code> 中内容的格式，请查看 SAE-data.md</p><h1 id="怎么使用"><a href="#怎么使用" class="headerlink" title="怎么使用"></a>怎么使用</h1><p><code>SAE.json.load</code> 载入json文本，返回作品的编号  </p><p><code>SAE.json.debug(编号)</code><br>输出编号为起点的结构树  </p><p><code>SAE.options._OrigInputType</code><br>显示输入区的编号，仅供调试使用，会显示输入的数字类型，但同时会导致分析出错。（查找 InputType 了解更多）</p><h1 id="Scratch-JSON-文件的构成"><a href="#Scratch-JSON-文件的构成" class="headerlink" title="Scratch JSON 文件的构成"></a>Scratch JSON 文件的构成</h1><p>Scratch 的 JSON 文件最外层是一个对象，有四个属性：</p><p><code>&#123;&quot;targets&quot;:[...],&quot;monitors&quot;:[...],&quot;extensions&quot;:[...],&quot;meta&quot;:&#123;...&#125;&#125;</code></p><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>targets</td><td>背景和角色</td></tr><tr><td>monitors</td><td>变量在舞台上的显示</td></tr><tr><td>extensions</td><td>使用的拓展</td></tr><tr><td>meta</td><td>创作作品的工具的说明</td></tr></tbody></table><h2 id="targets"><a href="#targets" class="headerlink" title="targets"></a>targets</h2><p>targets是一个包含了n个对象的数组。<br><code>&quot;targets&quot;:[&#123;...&#125;,&#123;...&#125;,...]</code></p><p>每一个对象的属性：</p><p>(!:只有舞台才有 !!:只有角色才有 ?:后面有详细说明)</p><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>isStage</td><td>是否为舞台</td></tr><tr><td>name</td><td>角色名字（舞台为<code>Stage</code>）</td></tr><tr><td>variables</td><td>?变量列表（如果是舞台，则为共用变量）</td></tr><tr><td>lists</td><td>?列表列表（如果是舞台，则为共用列表）</td></tr><tr><td>broadcasts</td><td>?广播列表</td></tr><tr><td>blocks</td><td>?积木列表</td></tr><tr><td>comments</td><td>?注释列表</td></tr><tr><td>currentCostume</td><td>当前造型编号（0开始）</td></tr><tr><td>costumes</td><td>?造型列表</td></tr><tr><td>sounds</td><td>?声音列表</td></tr><tr><td>volume</td><td>当前音量（舞台，角色都有！）</td></tr><tr><td>layerOrder</td><td>!  层叠顺序（越小越后）</td></tr><tr><td>tempo</td><td>!  演奏拍子数（拓展：音乐）</td></tr><tr><td>videoState</td><td>!  摄像头是否开启（拓展：视频侦测）</td></tr><tr><td>textToSpeechLanguage</td><td>!  文本转语音语言（拓展：文本朗读）</td></tr><tr><td>visible</td><td>!  是否显示</td></tr><tr><td>x</td><td>!! x坐标</td></tr><tr><td>y</td><td>!! y坐标</td></tr><tr><td>size</td><td>!! 大小</td></tr><tr><td>direction</td><td>!! 方向</td></tr><tr><td>draggable</td><td>!! 可拖动？</td></tr><tr><td>rotationStyle</td><td>!! 旋转模式</td></tr></tbody></table><h2 id="variables-lists"><a href="#variables-lists" class="headerlink" title="variables,lists"></a>variables,lists</h2><p>变量列表为一个对象，表示角色、舞台里的变量。</p><p><code>&quot;variables&quot;:&#123;&quot;变量id&quot;:[&quot;变量名&quot;,&quot;数值&quot;],...&#125;</code></p><p>变量id - 系统自动生成的变量id，一般是20个字符。<strong>也有例外，例如“我的变量”</strong><br>变量名：变量的名字<br>数值：变量的数值<br>列表同理，只是数值变成了列表。</p><h2 id="broadcasts"><a href="#broadcasts" class="headerlink" title="broadcasts"></a>broadcasts</h2><p><code>&quot;broadcasts&quot;:&#123;&quot;广播id&quot;:&quot;广播名&quot;,...&#125;</code></p><p>广播列表的结构和变量差不多，就是没有数值的变量。表示角色、舞台内使用的广播。<br>这个列表目前在处理时没有任何用处。因为处理时直接读取积木。</p><h2 id="costumes-sounds"><a href="#costumes-sounds" class="headerlink" title="costumes,sounds"></a>costumes,sounds</h2><p>costumes和sounds是一个包含了n个对象的数组。<br><code>&quot;costumes&quot;:[&#123;...&#125;,&#123;...&#125;,...]</code><br><code>&quot;sounds&quot;:[&#123;...&#125;,&#123;...&#125;,...]</code></p><p>每一个对象的属性：</p><p>(!:只有costumes才有 !!:只有sound才有)</p><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>name</td><td>造型&#x2F;声音的名字</td></tr><tr><td>assetId</td><td>造型&#x2F;声音的包内文件名（一般是文件md5+原拓展名）</td></tr><tr><td>md5ext</td><td>和assetId一样</td></tr><tr><td>dataFormat</td><td>文件拓展名</td></tr><tr><td>bitmapResolution</td><td>!  位图分辨率（表示图像会被缩小到几分之一）</td></tr><tr><td>rotationCenterX</td><td>!  图片旋转中心x坐标</td></tr><tr><td>rotationCenterY</td><td>!  图片旋转中心y坐标</td></tr><tr><td>format</td><td>!! <strong>不知道!</strong></td></tr><tr><td>sampleCount</td><td>!! 声音采样数</td></tr><tr><td>rate</td><td>!! 声音采样率 (sample&#x2F;rate&#x3D;声音长度(秒)</td></tr></tbody></table><h2 id="comments"><a href="#comments" class="headerlink" title="comments"></a>comments</h2><p>comments是一个包含了很多<code>注释对象</code>的对象。</p><p><code>&quot;comments&quot;:&#123;&quot;注释id&quot;:&#123;...&#125;,...&#125;</code></p><p>每一个注释对象的属性：</p><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>blockId</td><td>注释连接到的积木id(null:没链接到积木的注释)</td></tr><tr><td>x</td><td>x坐标</td></tr><tr><td>y</td><td>y坐标</td></tr><tr><td>width</td><td>宽度</td></tr><tr><td>height</td><td>高度</td></tr><tr><td>minimized</td><td>注释是否折叠</td></tr><tr><td>text</td><td>注释文本</td></tr></tbody></table><h2 id="blocks"><a href="#blocks" class="headerlink" title="blocks"></a>blocks</h2><p>blocks是一个包含了很多<code>积木对象</code>的对象。</p><p><code>&quot;blocks&quot;:&#123;&quot;积木id&quot;:&#123;...&#125;,...&#125;</code></p><p>积木对象的格式比较复杂。? 表示后面会详细说明</p><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>opcode</td><td>?积木的类型（例如<code>motion_gotoxy</code>代表<code>移动到 x: () y: ()</code>）</td></tr><tr><td>next</td><td>下一个积木的id（null表示没有）</td></tr><tr><td>parent</td><td>上一个（或者，外面一层的）积木的id（null表示没有）</td></tr><tr><td>inputs</td><td>?输入的数字和放入的积木</td></tr><tr><td>fields</td><td>?选择的下拉选项</td></tr><tr><td>shadow</td><td>是否为可拖出的积木（例如造型选项即为不可拖出的积木）</td></tr><tr><td>toplevel</td><td>是否处于最前面(parent等于null)</td></tr><tr><td>x</td><td>x坐标（只在最前面的积木出现）</td></tr><tr><td>y</td><td>y坐标（只在最前面的积木出现）</td></tr><tr><td>mutation</td><td>?积木变体信息</td></tr></tbody></table><p>需要注意的是还有一种特殊情况，在有变量和列表单独出现（没有连在其他积木上）时，<br>“积木id”后还可能会出现数组[…]，需要特别留意，其格式如下：</p><p><code>[输入类型,数值,相关id,x坐标,y坐标]</code></p><p>可以参见 <strong>inputs</strong> 中的说明。</p><p><strong>opcode</strong></p><p>opcode是表示积木的类型，一般由<code>类型名_操作名</code>组成。<br>例如 <code>motion_gotoxy</code> 就表示 <code>motion</code>(运动) 类型下的 <code>gotoxy</code> 动作。<code>移动到 x: () y: ()</code><br>可以在 SAE-disp-table.js 中找到积木类型与积木显示之间的对照表。<br>关于类型与拓展列表，可以参考 extensions.</p><p><strong>inputs</strong></p><p><code>&quot;inputs&quot;:&#123;&quot;输入名1&quot;:[...],&quot;输入名2&quot;:[...],...&#125;</code></p><p>输入名:代表参数的名字，例如在积木<code>motion_movesteps</code>中<code>STEPS</code>表示步数</p><p>SAE 没有检测参数的名字，而是假设它们以一定的顺序出现，因此在SAE-disp-table.js中参数都用1,2,3…编号。这并不严谨。<br>不过也有例外，在”如果”,”不成立”这类要拖入六边形积木和其它积木组的时候参数将会按照拖入的顺序进行排序，如果没有拖入还会消失。<br>这时就需要通过检测输入名的最后一个字符(偷懒)来判断参数的位置。<br>例如”如果”<code>control_if</code>中有两个参数:<code>CONDITION</code>和<code>SUBSTACK</code>，那么就把它在特殊(需要特殊关照的)积木列表<code>blockspecs</code>中标记<br><code>&quot;#control_if&quot;,&quot;NK&quot;,</code><br>就表示 <code>control_if</code> 中有两个参数，最后一个字母分别是<code>N</code>和<code>K</code>。</p><p>然后是[…]里的内容，是这样：</p><p><code>[类型编号,参数1]</code> 或者 <code>[类型编号,参数1,参数2]</code></p><p>注意参数1，参数2中既可能有文本或者数字，也可能有与<code>[类型编号,参数1,参数2]</code>相似的结构，例如</p><p><code>[1, [12, &quot;x&quot;, &quot;XzZ3_=u+7z5o#CUVg4,_&quot;], &quot;10&quot;]</code></p><p>像这种参数中也有 <code>[类型编号,参数1,参数2]</code> 类型编号的情况，在下面的表格中会用[类型x]来代替</p><p>我总结了一下大概是这样：</p><table><thead><tr><th>编号</th><th>参数1</th><th>参数2</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>[积木id] 或 [类型x]</td><td>无</td><td>普通的白色空或者圆形选项，内容是参数1的数值</td></tr><tr><td>2</td><td>[积木id] 或 null</td><td>无</td><td>六边形填入或者C,E形积木中的积木组的填入，参数1表示填入的积木id(null表示未填入)</td></tr><tr><td>3</td><td>[积木id] 或 [类型x]</td><td>[积木id] 或 [类型x]</td><td>填入积木的白色空或者圆形选项，参数1为填入的积木，参数2为原来的白色空或者选项</td></tr><tr><td>4</td><td>数字</td><td>无</td><td>!能填入任意数字的白色空</td></tr><tr><td>5</td><td>大于零的数字</td><td>无</td><td>!能填入任意大于零的数字的白色空</td></tr><tr><td>6</td><td>正整数</td><td>无</td><td>!能填入任意正整数的白色空</td></tr><tr><td>7</td><td>正整数</td><td>无</td><td>!能填入任意正整数的白色空（列表序号专用）</td></tr><tr><td>8</td><td>表示角度的数字</td><td>无</td><td>能填入表示角度的数字的白色空（大于-180，不超过180）</td></tr><tr><td>9</td><td>颜色</td><td>无</td><td>能选择颜色的空</td></tr><tr><td>10</td><td>文本</td><td>无</td><td>能填入任意文本的白色空</td></tr><tr><td>11</td><td>广播名字</td><td>无</td><td>能选择广播名字的选项</td></tr><tr><td>12</td><td>变量名</td><td>[变量id]</td><td>引用变量</td></tr><tr><td>13</td><td>列表名</td><td>[列表id]</td><td>引用列表</td></tr></tbody></table><p>标了 ! 的积木在电脑上这些没啥区别，你可以想输入什么数字就输入什么数字，但是在手机上点击这些空会弹出有限按钮的输入小键盘，会有区别。<br>例如整数输入时没有.号，正整数输入时没有-号</p><p><strong>fields</strong></p><p>fields比较简单。</p><p><code>&quot;fields&quot;:&#123;&quot;输入名1&quot;:[...],&quot;输入名2&quot;:[...],...&#125;</code></p><p>输入名和 <strong>inputs</strong> 差不多。除了没有特殊情况之外。</p><p>[…]的语法也变简单了，具体是 <code>[&quot;文本&quot;,指向id]</code>, 其中指向id 表示文本指向的项目id<br>(如果文本是变量名，那么id就是相对应的变量id；如果文本是广播名，那么指向id 表示文本指向的广播id；如果没有合适的id则会显示null。  </p><p><strong>mutation</strong></p><p>这一个比较少用，表示积木变体。常见于 <code>procedures_prototype</code> 和 <code>procedures_definition</code>中。</p><p><code>&quot;mutation&quot;:&#123;...&#125;</code></p><p>?:只在 <code>control_stop</code> 中有 !: 在<code>procedures_prototype</code> 和 <code>procedures_call</code> 中有 !!:只在 <code>procedures_prototype</code> 中有</p><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>tagName</td><td>文本”mutation”</td></tr><tr><td>children</td><td>空数组[]</td></tr><tr><td>hasnext</td><td>? 能否在后面连接积木（选择<code>停止该角色的其他脚本</code>时为<code>true</code>）</td></tr><tr><td>proccode</td><td>! 积木定义代码(%s表示文本，%b表示条件，%n表示数字)</td></tr><tr><td>argumentids</td><td>! 参数的id</td></tr><tr><td>argumentNames</td><td>!!参数的名字（其实你可以在这个积木的inputs里面获取）</td></tr><tr><td>argumentdefaults</td><td>!!参数默认值</td></tr><tr><td>warp</td><td>! 运行时不刷新屏幕</td></tr></tbody></table><h2 id="monitors"><a href="#monitors" class="headerlink" title="monitors"></a>monitors</h2><p>monitors 用于表示舞台上的变量显示。</p><p><code>&quot;monitors&quot;:[&#123;...&#125;,&#123;...&#125;,...]</code></p><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>类型</td></tr><tr><td>mode</td><td>显示模式</td></tr><tr><td>opcode</td><td>显示类型（<code>类型名_操作名</code>)</td></tr><tr><td>params</td><td>参数</td></tr><tr><td>spriteName</td><td>角色名（null:舞台）</td></tr><tr><td>value</td><td>当前数值</td></tr><tr><td>width</td><td>宽度</td></tr><tr><td>height</td><td>高度</td></tr><tr><td>x</td><td>x坐标</td></tr><tr><td>y</td><td>y坐标</td></tr><tr><td>visible</td><td>是否显示</td></tr><tr><td>sliderMin</td><td>滑块最小值</td></tr><tr><td>sliderMax</td><td>滑块最大值</td></tr><tr><td>isDiscrete</td><td>是否允许滑块选择小数</td></tr></tbody></table><p><strong>id,opcode</strong></p><p>id的功能应该只是区分不同的monitors，但是既然它与opcode有一点关联那不妨也提一下<br>[角色id]为随机生成，目前没看到它在除monitors之外的地方出现。<br>[参数NUMBER_NAME] 指params参数中参数NUMBER_NAME的值</p><p>edit: id放在后面</p><p>如果你使用文本编辑器打开，请忽略下面的\号</p><table><thead><tr><th>id</th><th>opcode</th><th>说明</th></tr></thead><tbody><tr><td>loudness</td><td>sensing_loudness</td><td>响度</td></tr><tr><td>[列表id]</td><td>data_listcontents</td><td>列表，参数 LIST: 列表名</td></tr><tr><td>[角色id]_xposition</td><td>motion_xposition</td><td>x坐标</td></tr><tr><td>[角色id]_yposition</td><td>motion_yposition</td><td>y坐标</td></tr><tr><td>[角色id]_direction</td><td>motion_direction</td><td>方向</td></tr><tr><td>[角色id]_costumenumbername_[参数NUMBER_NAME]</td><td>looks_costumenumbername</td><td>造型[名称&#x2F;编号]，参数 NUMBER_NAME: number 编号 name 名称</td></tr><tr><td>backdropnumbername_[参数NUMBER_NAME]</td><td>looks_backdropnumbername</td><td>背景[名称&#x2F;编号]，参数 NUMBER_NAME: number 编号 name 名称</td></tr><tr><td>[角色id]_volume</td><td>sound_volume</td><td>音量</td></tr><tr><td>answer</td><td>sensing_answer</td><td>回答</td></tr><tr><td>timer</td><td>sensing_timer</td><td>计时器</td></tr><tr><td>current_[参数CURRENT_MENU小写]</td><td>sensing_current</td><td>当前时间，参数 CURRENT_MENU: YEAR年, …</td></tr><tr><td>sensing_username</td><td>sensing_username</td><td>用户名</td></tr><tr><td>[变量id]</td><td>data_variable</td><td>变量，参数 VARIABLE: 变量名</td></tr><tr><td>music_getTempo</td><td>music_getTempo</td><td>音乐演奏速度</td></tr><tr><td>translate_getViewerLanguage</td><td>translate_getViewerLanguage</td><td>翻译:访客语言</td></tr></tbody></table><p>目前还未收录硬件拓展和非原生sc拓展。</p><p><strong>mode</strong></p><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>普通</td></tr><tr><td>large</td><td>大字</td></tr><tr><td>slider</td><td>滑块</td></tr><tr><td>list</td><td>列表</td></tr></tbody></table><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">你之所以在删除所有拓展的积木后重新加载却无法彻底删除拓展，可能是因为拓展相关内容被写到了<span class="hljs-literal">monitor</span>中，即使它被隐藏。<br></code></pre></td></tr></table></figure><h2 id="extensions"><a href="#extensions" class="headerlink" title="extensions"></a>extensions</h2><p>表示作品中使用的拓展的列表。</p><p><code>&quot;extensions&quot;:[...]</code></p><p>已支持的拓展：</p><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>music</td><td>音乐</td></tr><tr><td>pen</td><td>画笔</td></tr><tr><td>videoSensing</td><td>视频侦测</td></tr><tr><td>text2speech</td><td>文字朗读</td></tr><tr><td>translate</td><td>翻译</td></tr><tr><td>makeymakey</td><td>Makey Makey</td></tr><tr><td>tw</td><td>TurboWarp</td></tr><tr><td>lazyaudio</td><td>稽木世界:LazyAudio</td></tr><tr><td>canvas</td><td>稽木世界:Canvas</td></tr><tr><td>stringExt</td><td>稽木世界:String Extension</td></tr><tr><td>js</td><td>稽木世界:JavaScript</td></tr><tr><td>community</td><td>稽木世界:Community</td></tr><tr><td>puzzle</td><td>稽木世界:Puzzle</td></tr><tr><td>kinect</td><td>稽木世界:Kinect</td></tr><tr><td>community</td><td>共创世界:社区(虽然和 稽木世界 用的是一个单词)</td></tr><tr><td>lazyMusic</td><td>共创世界:音乐懒加载</td></tr><tr><td>text</td><td>艺术字</td></tr><tr><td>faceSensing</td><td>面部识别</td></tr><tr><td>box2d</td><td>物理引擎</td></tr><tr><td>redBoard</td><td>共创世界:小红板</td></tr></tbody></table><h2 id="meta"><a href="#meta" class="headerlink" title="meta"></a>meta</h2><p>表示编辑器的信息。</p><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>semver</td><td>Scratch的版本(不确定)</td></tr><tr><td>vm</td><td>Scratch vm的版本(不确定)</td></tr><tr><td>agent</td><td>浏览器UA</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scratch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>国庆节随笔</title>
    <link href="/2022/10/06/%E5%9B%BD%E5%BA%86%E8%8A%82%E9%9A%8F%E7%AC%94/"/>
    <url>/2022/10/06/%E5%9B%BD%E5%BA%86%E8%8A%82%E9%9A%8F%E7%AC%94/</url>
    
    <content type="html"><![CDATA[<h1 id="每逢佳节"><a href="#每逢佳节" class="headerlink" title="每逢佳节"></a>每逢佳节</h1><p>每个人都有自己不同的过节方式，但是不论怎样过节，人们总是在坚守各自的目标和工作。每逢佳节总是有一些人会被人们忽略，他们就是坚守在岗位上的人。我们能平静愉快的度过假期，无忧无虑的学习和工作，都是因为有一群人总是在默默地为我们付出着，他们就是驻守在祖国边境的战士们。在人们尽情的玩乐时，他们在环境寒冷艰苦的西藏边疆，保卫国家的领土和边境。正是因为有他们的坚守，我们才能过一个安心的节日。有人虽然已不在世上，但他们为我们如今的生活鞠躬尽瘁，付出了无数的精力、鲜血乃至生命。这些人包括革命烈士和所有曾经为人民和共和国服务的人。他们曾经不懈的努力和拼命的付出才使我们能出生并且能快乐的活着。回顾共和国的历史，许多人不顾一切，只为国家和人民能变得越来越好。他们应该永远被人们学习和尊敬。他们是我们最应该跟随的榜样。最后，每一个在节日假期中坚守自己的岗位的人都在为我们默默地付出。在街上散步时，有警察在巡逻，交警在智慧交通。我也看到有救护车在道路上飞驰而过，与死神赛跑挽救病人。医院里的核酸屋一直都有人值守，保证我们可以正常的上学和上班。马路上还有环卫工人不辞辛劳的打扫清理，使开车和走路的人们能有干净舒适的体验。这些都是普通人在默默无闻地做好自己的事，守护自己的岗位。我们都是社会中的组成部分，一颗“螺丝钉”，每个人都会在社会中发挥着一定的作用。作为学生，我们的目标就是努力学习，将来也为国家的发展贡献出自己的力量。</p>]]></content>
    
    
    <categories>
      
      <category>学校</category>
      
    </categories>
    
    
    <tags>
      
      <tag>四中</tag>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>论使用python和WebAssembly重写scratch编译器</title>
    <link href="/2022/10/05/%E8%AE%BA%E4%BD%BF%E7%94%A8python%E5%92%8CWebAssembly%E9%87%8D%E5%86%99scratch%E7%BC%96%E8%AF%91%E5%99%A8/"/>
    <url>/2022/10/05/%E8%AE%BA%E4%BD%BF%E7%94%A8python%E5%92%8CWebAssembly%E9%87%8D%E5%86%99scratch%E7%BC%96%E8%AF%91%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>scratch最大的缺陷就是性能及其拉跨，自从有了Evoluted-Scratch,Turbowarp, leopard-js等jit编译器，这个问题得到了一部分的解决。但是并没有使scratch的性能与其他语言接近，所以我认为可以用WASM来写scratch编译器，或许能最大程度提升scratch的运行速度。</p><p>目前使用python来写编译器的核心部分，编译器会将project.json和assets编译成C++(使用SDL作为渲染引擎)，再使用Emscripten将C++编译成WASM。</p><p>在BlockAssembly中，所有的积木都是scratch3.0包含的标准积木，但是可以通过一个类似core.js的”标准编译器”, 将clipcc, ccw, acamp等平台的特殊积木编译成标准积木。也可以更方便的编写扩展库，只需要一个json文件就能将block和code对应起来，编写成一个模块。也可以使用scratch积木轻松编写模块。</p><p>使用SDL和WASM的好处是，一样的代码能在不同的平台运行，(Andriod, IOS, Mac, Windows, Web等等)，scratch程序就可以轻松的打包到不同的平台。SDL后端使用OpenGL渲染，能稳定的达到浏览器支持的最高帧数。</p><p>最后，Github项目地址: <a href="https://github.com/LuminousWL/BlockAssembly">BlockAssembly</a></p>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>scratch</tag>
      
      <tag>C++</tag>
      
      <tag>SDL</tag>
      
      <tag>WebAssembly</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
